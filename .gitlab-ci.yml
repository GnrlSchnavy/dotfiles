stages:
  - validate
  - test
  - report

variables:
  CI: "true"
  DOTFILES_CI: "true"
  HOMEBREW_NO_AUTO_UPDATE: "1"
  HOMEBREW_NO_INSTALL_CLEANUP: "1"
  HOMEBREW_NO_ANALYTICS: "1"
  NONINTERACTIVE: "1"

validate:
  stage: validate
  image: alpine:latest
  script:
    - echo "Validating repository structure"
    - test -f "setup.sh" || (echo "setup.sh not found" && exit 1)
    - test -d "nix" || (echo "nix directory not found" && exit 1)
    - test -d "scripts" || (echo "scripts directory not found" && exit 1)
    - test -f "scripts/ci-setup.sh" || (echo "ci-setup.sh not found" && exit 1)
    - test -f "scripts/ci-verify.sh" || (echo "ci-verify.sh not found" && exit 1)
    - echo "Repository structure validation passed"
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^ci\/.*/
    - if: $CI_PIPELINE_SOURCE == "web"

test_macos_setup:
  stage: test
  tags:
    - macos
    - apple-silicon
  timeout: 60m
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^ci\/.*/
      changes:
        - "**/*"
        - "!**.md"
        - "!docs/**"
    - if: $CI_PIPELINE_SOURCE == "web"
  before_script:
    - echo "System Information"
    - whoami
    - pwd
  script:
    - echo "Pre-cleanup environment"
    - rm -rf ~/.dotfiles 2>/dev/null || true
    - rm -rf ~/.nix-* ~/.nixpkgs 2>/dev/null || true
    - find ~ -maxdepth 1 -type l -name ".*" -exec rm {} \; 2>/dev/null || true
    - echo "Running CI setup script"
    - chmod +x ./scripts/ci-setup.sh
    - ./scripts/ci-setup.sh
    - echo "Running verification script"
    - chmod +x ./scripts/ci-verify.sh
    - ./scripts/ci-verify.sh
    - echo "Running health check"
    - cd ~/.dotfiles
    - ./scripts/check.sh
    - echo "Testing development workflow"
    - source ~/.zprofile || true
    - git --version
    - kubectl version --client || echo "kubectl not available"
    - command -v nvm && echo "nvm available" || echo "nvm not found"
    - command -v jenv && echo "jenv available" || echo "jenv not found"
    - echo "macOS setup test completed successfully"
  after_script:
    - echo "Generating installation report"
    - echo "Pipeline completed successfully"